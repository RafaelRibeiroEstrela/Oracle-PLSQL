

-- UTILIZANDO METODOS PARA CONTROLAR AS COLLECTIONS

--EXISTS(n)     (RETORNA TRUE SE O ELEMENTO n EXISTE)
--COUNT         (RETORNAR O NUMERO DE ELEMENTOS)
--FIRST         (RETORNA O PRIMEIRO NUMERO DO INDICE)
--LAST          (RETORNA O ULTIMO NUMERO DO INDICE)
--LIMIT         (RETORNA O MAIOR POSSIVEL INDICE) - VARRAY
--PRIOR(n)      (RETORNA O NUMERO DE INDICE ANTERIOR AO n)
--NEXT(n)       (RETORNA O NUMERO DE INDICE POSTERIOR A n)
--EXTEND        (ADICIONA UM ELEMENTO NULO) - NESTEDTABLE e VARRAY    
--EXTEND(n)     (ADICIONA n ELEMENTOS NULOS) - NESTEDTABLE e VARRAY
--EXTEND(n,i)   (ADIDIONA n COPIAS DO ELEMENTO i) - NESTEDTABLE e VARRAY
--TRIM          (REMOVE UM ELEMENTO DO FINAL DA COLLECTION) - NESTEDTABLE
--TRIM(n)       (REMOVE n ELEMENTOS DO FINAL DA COLLECTION) - NESTEDTABLE
--DELETE        (REMOVE TODOS OS ELEMENTOS DE UMA COLLECTION) - ASSOCIATIVEARRAY e NESTEDTABLE
--DELETE(n)     (REMOVE O ELEMENTO n DA COLLECTION) - ASSOCIATIVEARRAY e NESTEDTABLE
--DELETE(m,n)   (REMOVE TODOS OS ELEMENTOS NA FAIXA DE m A n DA COLLECTION) - ASSOCIATIVEARRAY e NESTEDTABLE    


-- ASSOCIATIVE ARRAY

SET SERVEROUTPUT ON

DECLARE
    TYPE structList IS TABLE OF NUMBER INDEX BY BINARY_INTEGER;
    varList structList;
BEGIN
    FOR i IN 1..10 LOOP
        varList(i) := i * 10;
    END LOOP;
    
    DBMS_OUTPUT.PUT_LINE('COUNT(): '|| varList.COUNT);
    DBMS_OUTPUT.PUT_LINE('FIRST(): '|| varList.FIRST);
    DBMS_OUTPUT.PUT_LINE('LAST(): '|| varList.LAST);
    varList(varList.LAST + 1) := 11;
    DBMS_OUTPUT.PUT_LINE('ULTIMO ELEMENTO: '|| varList(varList.LAST));
END;